// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  fullname   String
  email      String       @unique
  password   String
  is_verfied Boolean      @default(false)
  is_admin   Boolean      @default(false)
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  Orders     Orders[]
  Carts      Cart[]
  Enrollment Enrollment[]
  Paymeny    Payment[]
}

model Category {
  id                 Int        @id @default(autoincrement())
  name               String
  created_at         DateTime   @default(now())
  updated_at         DateTime   @updatedAt
  subcategory        Category[] @relation("SubCategoryToCategory")
  parent_category    Category?  @relation("SubCategoryToCategory", fields: [parent_category_id], references: [id])
  parent_category_id Int?
  Courses            Course[]
}

model Course {
  id              Int              @id @default(autoincrement())
  title           String
  description     String
  price           Float
  is_free         Boolean
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  Order           Orders[]
  Payment         Payment[]
  Topics          Topic[]
  Enrollments     Enrollment[]
  OrderItems      OrderItem[]
  Carts           Cart[]
  Category        Category?        @relation(fields: [categoryId], references: [id])
  categoryId      Int
  CourseThumbnail CourseThumbnail?
}

model Cart {
  id         Int      @id @default(autoincrement())
  quantity   Int      @default(1)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User?    @relation(fields: [userId], references: [id])
  userId     Int?
  Course     Course?  @relation(fields: [courseId], references: [id])
  courseId   Int?
}

model Enrollment {
  id          Int      @id @default(autoincrement())
  enrolled_at DateTime @default(now())
  progress    Int
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
  Course      Course?  @relation(fields: [courseId], references: [id])
  courseId    Int?
}

model Payment {
  id       Int      @id @default(autoincrement())
  amount   Float
  paid_at  DateTime @default(now())
  User     User?    @relation(fields: [userId], references: [id])
  userId   Int?
  Course   Course?  @relation(fields: [courseId], references: [id])
  courseId Int?
}

model Otp {
  email      String   @unique
  otp        Int
  expires_at DateTime
}

model Topic {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  parentId   Int?
  parent     Topic?   @relation("ChildTopics", fields: [parentId], references: [id])
  subtopics  Topic[]  @relation("ChildTopics")
  files      File[]
  Course     Course?  @relation(fields: [courseId], references: [id])
  courseId   Int?
}

model File {
  id         Int      @id @default(autoincrement())
  filename   String
  filepath   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Topic      Topic?   @relation(fields: [topicId], references: [id])
  topicId    Int?
}

model Orders {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  User       User?       @relation(fields: [userId], references: [id])
  userId     Int?
  OrderItems OrderItem[]
  Course     Course?     @relation(fields: [courseId], references: [id])
  courseId   Int?
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Course     Course?  @relation(fields: [courseId], references: [id])
  courseId   Int?
  Orders     Orders?  @relation(fields: [ordersId], references: [id])
  ordersId   Int?
}

model CourseThumbnail {
  id         Int      @id @default(autoincrement())
  filename   String
  filepath   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   Int      @unique
}
